version: '3'
services:
    postgres:
        image: 'postgres:12.3'
        environment:
            - POSTGRES_PASSWORD=postgres_password
    redis:
        image: 'redis:6.0.3'
    nginx:
        #if nginx crash; restart it always
        restart: always
        depends_on:
            - api
            - client
        build:
            context: ./nginx
            dockerfile: Dockerfile.dev
        ports:
            - "3030:80"
    api:
        depends_on:
            - postgres
        build:
            context: ./server
            dockerfile: Dockerfile.dev
        volumes:
            #inside the container; donot override node_modules folder
            - /app/node_modules
            #redirect any other path in /app to the ./server directory.
            - ./server:/app
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - PGUSER=postgres
            - PGHOST=postgres
            - PGDATABASE=postgres
            - PGPASSWORD=postgres_password
            - PGPORT=5432
        #ports:
        #    - "5001:5000"
    client:
        depends_on:
            - api
        stdin_open: true
        build:
            context: ./client
            dockerfile: Dockerfile.dev
        volumes:
            - /app/node_modules
            - ./client:/app
        #ports:
        #    - "3001:3000"
    worker:
        depends_on:
            - redis
        build:
            context: ./worker
            dockerfile: Dockerfile.dev
        volumes:
            - /app/node_modules
            - ./worker:/app
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379


#When you specify environment variables inside of a docker compose file,
#that information is not being encoded inside the docker image.
#The environment variables is read from the host machine of the container, 
#when the container is created.
#It's your local machine in case of your development process.

#variableName=value
#variableName is set with value when the container is created.

#variableName
#variableName is set with the value of that variableName as in the host machine when the container is created.
